-- criando uma stored procedure
DELIMITER //
CREATE PROCEDURE `ALO_MUNDO` ()
BEGIN
	-- mostrar uma mensagem e definir um alias
	SELECT 'Alô Mundo!' AS MENSAGEM;
END//

-- chamando a stored procedure
CALL ALO_MUNDO;

-- alterando uma stored procedure (devemos excluir para refazer com as alterações necessárias)
DROP PROCEDURE IF EXISTS `ALO_MUNDO`;
DELIMITER //
CREATE PROCEDURE `ALO_MUNDO` ()
BEGIN
	-- mostrar uma mensagem e definir um alias
    SELECT 'Alô Mundo!' AS MENSAGEM;
END//

-- excluindo uma stored procedure
DROP PROCEDURE ALO_MUNDO;

-- criando uma stored procedure com variável
DELIMITER //
CREATE PROCEDURE `EXIBE_VARIAVEL` ()
BEGIN
	DECLARE TEXTO VARCHAR(12) DEFAULT 'Alô Mundo!!!';
    SELECT TEXTO AS MENSAGEM;
END//

CALL EXIBE_VARIAVEL;

DELIMITER //
CREATE PROCEDURE `FICHA` ()
BEGIN
	DECLARE NOME VARCHAR(10) DEFAULT 'Jonas';
    DECLARE DT_NASCIMENTO DATE DEFAULT '1994-08-11';
    DECLARE IDADE TINYINT DEFAULT 29;
    DECLARE ALTURA DECIMAL(3,2) DEFAULT 1.70;
    SELECT CONCAT(
		'Nome: ', NOME, ' Data de nascimento: ', DT_NASCIMENTO, ' Idade: ', IDADE, ' anos ', ' Altura: ', ALTURA, ' m'
    ) AS MENSAGEM;
END//

CALL FICHA;

-- atribuindo um valor a mais de uma variável
DELIMITER //
CREATE PROCEDURE `ATRIBUINDO_VALOR` ()
BEGIN
	DECLARE N1, N2 TINYINT DEFAULT 5;
    SELECT N1, N2;
END//

CALL ATRIBUINDO_VALOR;

-- alterando valores dentro da procedure
DELIMITER //
CREATE PROCEDURE `MODIFICANDO_VALOR` ()
BEGIN
	DECLARE TEXTO VARCHAR(20) DEFAULT 'TEXTO INICIAL';
    SELECT TEXTO;
    SET TEXTO = 'TEXTO MODIFICADO';
    SELECT TEXTO;
END//

CALL MODIFICANDO_VALOR;

DELIMITER //
DROP PROCEDURE IF EXISTS INCLUI_NOVO_PRODUTO;
CREATE PROCEDURE `INCLUI_NOVO_PRODUTO` ()
BEGIN
	DECLARE CODIGO VARCHAR(50) DEFAULT '3000001';
    DECLARE NOME VARCHAR(50) DEFAULT 'Sabor do Mar - 700ml - Manga';
    DECLARE SABOR VARCHAR(50) DEFAULT 'Manga';
    DECLARE TAMANHO VARCHAR(50) DEFAULT '700 ml';
    DECLARE EMBALAGEM VARCHAR(50) DEFAULT 'Garrafa';
    DECLARE PRECO FLOAT DEFAULT 7.50;
    
    INSERT INTO TABELA_DE_PRODUTOS (CODIGO_DO_PRODUTO, NOME_DO_PRODUTO, EMBALAGEM, TAMANHO, SABOR, PRECO_DE_LISTA)
    VALUES
    (CODIGO, NOME, EMBALAGEM, TAMANHO, SABOR, PRECO);
END//

CALL INCLUI_NOVO_PRODUTO;

SELECT * FROM TABELA_DE_PRODUTOS WHERE CODIGO_DO_PRODUTO = '3000001';

-- criando uma stored procedure com parâmetros
DELIMITER //
CREATE PROCEDURE `INCLUI_NOVO_PRODUTO_PARAMETROS`
(CODIGO VARCHAR(50), NOME VARCHAR(50), EMBALAGEM VARCHAR(50), TAMANHO VARCHAR(50), SABOR VARCHAR(50), PRECO FLOAT)
BEGIN
	INSERT INTO TABELA_DE_PRODUTOS (CODIGO_DO_PRODUTO, NOME_DO_PRODUTO, EMBALAGEM, TAMANHO, SABOR, PRECO_DE_LISTA)
    VALUES
    (CODIGO, NOME, EMBALAGEM, TAMANHO, SABOR, PRECO);
END//

CALL INCLUI_NOVO_PRODUTO_PARAMETROS('4000001', 'Sabor do Pantanal - 1 Litro - Melancia', 'Melancia', '1 Litro', 'PET', 4.76);

-- mostrando uma mensagem de sucesso ou de erro
DELIMITER //
DROP PROCEDURE IF EXISTS INCLUI_NOVO_PRODUTO_MENSAGEM;
CREATE PROCEDURE `INCLUI_NOVO_PRODUTO_MENSAGEM`
(CODIGO VARCHAR(50), NOME VARCHAR(50), EMBALAGEM VARCHAR(50), TAMANHO VARCHAR(50), SABOR VARCHAR(50), PRECO FLOAT)
BEGIN
	DECLARE MENSAGEM VARCHAR(50);
    DECLARE EXIT HANDLER FOR 1062
    BEGIN
		SET MENSAGEM = 'Problema de Chave Primária duplicada';
		SELECT MENSAGEM;
    END;
	INSERT INTO TABELA_DE_PRODUTOS (CODIGO_DO_PRODUTO, NOME_DO_PRODUTO, EMBALAGEM, TAMANHO, SABOR, PRECO_DE_LISTA)
    VALUES
    (CODIGO, NOME, EMBALAGEM, TAMANHO, SABOR, PRECO);
    SET MENSAGEM = 'Produto incluído com sucesso!';
    SELECT MENSAGEM;
END//

CALL INCLUI_NOVO_PRODUTO_MENSAGEM('4000002', 'Sabor do Pantanal - 1 Litro - Melancia', 'PET', '1 Litro', 'Melancia', 4.76);

-- atribuindo a uma variável o retorno de uma consulta
DELIMITER //
DROP PROCEDURE IF EXISTS ACHA_SABOR_PRODUTO;
CREATE PROCEDURE `ACHA_SABOR_PRODUTO` (vProduto VARCHAR(50))
BEGIN
	DECLARE vSabor VARCHAR(50);
    SELECT SABOR INTO vSabor FROM TABELA_DE_PRODUTOS WHERE CODIGO_DO_PRODUTO = vProduto;
    SELECT CONCAT('O sabor do produto ', vProduto, ' é ', vSabor) AS MENSAGEM;
END//

SELECT * FROM TABELA_DE_PRODUTOS;

CALL ACHA_SABOR_PRODUTO('1000889');

-- exercicios
DELIMITER //
CREATE PROCEDURE `SP_EX_01` ()
BEGIN
	DECLARE NOME VARCHAR(10) DEFAULT 'João';
    DECLARE IDADE TINYINT DEFAULT 10;
    DECLARE DT_NASCIMENTO DATE DEFAULT '2007-01-10';
    DECLARE CUSTO DECIMAL(4, 2) DEFAULT 10.23;
    SELECT NOME, IDADE, DT_NASCIMENTO, CUSTO;
END//

DELIMITER //
CREATE PROCEDURE `CALCULA_IDADE` ()
BEGIN
	UPDATE TABELA_DE_CLIENTES
    SET IDADE = TIMESTAMPDIFF(YEAR, DATA_DE_NASCIMENTO, CURDATE());
END//

DELIMITER //
DROP PROCEDURE IF EXISTS REAJUSTE_COMISSAO;
CREATE PROCEDURE `REAJUSTE_COMISSAO` (PERCENTUAL DECIMAL(3, 2))
BEGIN
	UPDATE TABELA_DE_VENDEDORES
    SET PERCENTUAL_COMISSAO = PERCENTUAL;
END//

CALL SP_EX_01;
CALL CALCULA_IDADE;
CALL REAJUSTE_COMISSAO(0.90);